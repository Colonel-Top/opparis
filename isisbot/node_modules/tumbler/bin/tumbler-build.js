#!/usr/bin/env node
(function() {
  var ARGUMENTS, ARGUMENTS_PARSER, buildTarget, help, main, tumbler, utils;
  utils = require('../lib/utils.js');
  tumbler = require('tumbler');
  ARGUMENTS = [[["-t", "--target"], "target", true, "Target to build"], [["-m", "--mode"], "mode", true, "(debug|release)"]];
  ARGUMENTS_PARSER = new utils.ArgumentParser({
    args: ARGUMENTS,
    defaultConfig: {
      mode: "debug"
    },
    configFile: ".tumbler"
  });
  help = function() {
    return ARGUMENTS_PARSER.help();
  };
  buildTarget = function(builder, target) {
    var failure, success;
    success = function() {
      return console.log("success");
    };
    failure = function() {
      return console.log("failure");
    };
    return builder.build(target, success, failure);
  };
  main = function(argv) {
    var builder, config;
    try {
      config = ARGUMENTS_PARSER.parse(argv);
      builder = tumbler.makeBuilder(config);
      ARGUMENTS_PARSER.print(config);
      return buildTarget(builder, config.target);
    } catch (e) {
      console.log(e);
      console.log(e.stack);
      return help();
    }
  };
  exports.main = main;
  exports.help = help;
  exports.DESCRIPTION = "Build target.";
  if (require.main === module) {
    main(process.argv.slice(2));
  }
}).call(this);
