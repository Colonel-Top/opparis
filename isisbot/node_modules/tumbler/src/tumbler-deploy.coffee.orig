http = require 'http'
fs = require 'fs' 
path = require 'path'
spawn = require('child_process').spawn
mime = require 'mime'
utils = require '../lib/utils.js'
tumbler = require 'tumbler'
assert = require 'assert'

ARGUMENTS_VALIDATION=(config)->
    if not config.destination?
        throw "Destination required."

ARGUMENTS = [
    [ ["-t", "--targets"], "targets", true, "Path to a JSON file containing the list of file to be deployed. Path should be relative to cwd." ],
    [ ["-d", "--destination"], "destination", true, "Destination directory" ],
    [ ["-h", "--help" ], "help", false, "Print this help" ]
    [ ["-m", "--mode"], "mode", true, "(debug|release)" ]
]

ARGUMENTS_PARSER = new utils.ArgumentParser
    args: ARGUMENTS
    defaultConfig:
        source: process.cwd()
        mode: "release"
        targets: "targets"
    configFile: ".tumbler"

help = ->
    ARGUMENTS_PARSER.help()

visit_directory = (dir_path,action,cond)->
    # visits children before parents
    if cond? and cond dir_path
        console.log "ok", dir_path
        children = fs.readdirSync dir_path
        for child in children
            if not (/\..*/.test child)
                child_fullpath = path.join dir_path,child 
                child_stat = fs.statSync child_fullpath
                if child_stat.isDirectory()
                    visit_directory child_fullpath,action
                try
                    action child_fullpath
                catch msg
                    throw "Failed on " + child_fullpath
    else
        console.log "fail", dir_path

erase = (filepath)->
    file_stat = fs.statSync filepath
    if file_stat.isDirectory()
        fs.rmdirSync filepath
    else
        fs.unlinkSync filepath

prepare_directory = (directory_path, callback)->
    if path.existsSync directory_path
        content = fs.readdirSync directory_path
        if content.length == 0
            callback directory_path
        else
            console.log "Directory not empty"
            console.log directory_path
            utils.yesno_prompt "Do you want to erase all of its content",(answer)->
                if (answer)
                    console.log "cleaning up"
                    visit_directory directory_path,erase
                else
                    throw "Aborting..."
    else
        try
            fs.mkdirSync directory_path,0777
        catch e
            throw "Could not make directory : " + directory_path
        callback directory_path

copyTargets = (targets, destination)->
    args = []
    for target in targets
        destPath = path.join destination, target
        parentDir = path.dirname destPath
        utils.mkdirsSync parentDir
        args.push [target, destPath]
    success = -> console.log "Success"
    failure = (msg)-> console.log "Failure ", msg
    utils.chainMap utils.copyFile, args, success, failure

deploy = (builder,  targets, destination)->
    console.log "Building !"
    success = -> 
        console.log "copying"
        copyTargets targets, destination
    failure = -> console.log "Compilation failed!"
    builder.buildAll targets.slice(), success, failure 

main = (argv)->
    try
        config = ARGUMENTS_PARSER.parse argv
        builder = tumbler.makeBuilder config
        ARGUMENTS_PARSER.print config
        ARGUMENTS_VALIDATION config
        targets = utils.readLinesSync config.targets
        assert.ok targets?, "You need to define some targets."
        destination = config.destination
        prepare_directory destination, -> 
            deploy builder, targets, destination
    catch e
        console.log e
        console.log "-----------------"
        console.log e.stack
        help()

exports.main = main
exports.help = help
exports.DESCRIPTION = """
Compiles and copies a given list of file to a dest directory.
"""

if require.main == module
    main process.argv[2..]
