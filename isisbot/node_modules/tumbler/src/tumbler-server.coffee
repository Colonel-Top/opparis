http = require 'http'
fs = require 'fs' 
path = require 'path'
mime = require 'mime'
utils = require '../lib/utils.js'
tumbler = require 'tumbler'

ARGUMENTS = [
    [ ["-p", "--port"]  , "port", true, "Server port" ]
    [ ["-h", "--host"]  , "host", true, "Server Host" ]
    [ ["-m", "--mode"]  , "mode", true, "(debug|release)" ]
    [ ["-a", "--always"], "alwaysCompile", false, "Always compile" ]
]

ARGUMENTS_PARSER = new utils.ArgumentParser
    args: ARGUMENTS
    defaultConfig:
        port: 10000
        host: "localhost"
        mode: "debug"
        alwaysCompile: false
    configFile: ".tumbler"

help = ->
    ARGUMENTS_PARSER.help()

serve_static_file = (response,filepath)->
    try
        if path.existsSync filepath
            stat =  fs.statSync filepath
            if stat.isDirectory()
                response.writeHead 404
                response.end "That's a directory."  
            else
                content_type =  mime.lookup filepath
                response.writeHead 200,
                    'content-type': content_type
                file = fs.createReadStream filepath
                file.pipe response
        else
            response.writeHead 404
            response.end "File not found"
    catch error
        response.writeHead 500
        response.end "Error "+error_msg     

request_handler = (builder,config)->
    (request, response)->
        response.setHeader "Access-Control-Allow-Origin", "*"
        url = request.url
        console.log 'GET ', url
        url_base = url.split '?', 1
        filepath = '.' + url_base
        serve_file = ->
            serve_static_file response,filepath
        failure_callback = (err_msg)->
            response.writeHead 500
            response.end err_msg 
        builder.build filepath,serve_file,failure_callback

###
compare_path = (left,right) ->
    fs.realpathSync(left) != fs.realpathSync(right) 
###

run_server = (builder,config)->
    server = http.createServer (request_handler builder,config)
    console.log 'Listening on port : ' + config.port
    server.listen(config.port)

main = (argv)->
    try
        config = ARGUMENTS_PARSER.parse argv
        builder = tumbler.makeBuilder config
        ARGUMENTS_PARSER.print config
        run_server builder,config        
    catch e
        console.log e
        console.log e.stack
        help()

exports.main = main
exports.help = help
exports.DESCRIPTION = """
Runs a static server with on-the-fly compilation.
"""

if require.main == module
    main process.argv[2..]
